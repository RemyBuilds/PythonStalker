import requests as r
import csv
import os
import json

def send_test_message_to_discord(webhook_url, asin):
    asin_link = f"https://amazon.com/dp/{asin}"
    message = f"Test ASIN link: {asin_link}"
    test_message = ''
    data = {"content": message}
    headers = {"Content-Type": "application/json"}
    response = r.post(webhook_url, data=json.dumps(data), headers=headers)
    print("Test message response from Discord:", response.status_code, response.reason)
    if response.status_code != 204:
        print("Response body:", response.text)

def remove_newline_from_set(input_set):
    cleaned_set = set()
    for input_string in input_set:
        cleaned_string = input_string.replace('\n', '')
        cleaned_set.add(cleaned_string)
    return cleaned_set

def send_to_discord(webhook_url, asin_set):
    asin_links = [f"https://amazon.com/dp/{asin}" for asin in asin_set]
    message = "\n".join(asin_links)
    data = {"content": message}
    headers = {"Content-Type": "application/json"}
    response = r.post(webhook_url, data=json.dumps(data), headers=headers)
    print("Response from Discord:", response.status_code, response.reason)
    if response.status_code != 204:
        print("Response body:", response.text)

def get_seller_keys(filename):
    keys = []
    # Build the path relative to the current script's directory
    file_path = os.path.join(os.path.dirname(__file__), filename)

    try:
        with open(file_path, mode='r') as file:
            reader = csv.reader(file)
            for row in reader:
                # Add the first element of each row to the list
                keys.append(row[0])
    except FileNotFoundError:
        print(f"Error: The file '{filename}' was not found.")
    except Exception as e:
        print(f"An error occurred: {e}")
    return keys

# Usage

# Keepa API key
apikey = 'keepa api key goes here'

# List of seller keys from the stores.csv file
seller_keys = get_seller_keys('stores.csv') 

# File path for CSV

folder_path = os.path.dirname(__file__)

# Discord Webhook URL
discord_webhook_url = 'discord webhook goes here'

for seller_key in seller_keys:
    # URL for Keepa API
    url = f'https://api.keepa.com/seller?key={apikey}&domain=1&seller={seller_key}&storefront=1'

    # Request to Keepa
    response = r.get(url)
    API_Data = response.json()

    # Extract ASIN list
    asin_list = set(API_Data['sellers'][seller_key].get('asinList', []))

    csv_filename = f"{seller_key}.csv"
    file_path = os.path.join(folder_path, csv_filename)

    # Check if file exists
    if os.path.exists(file_path):
        print(f"The file '{csv_filename}' exists in the folder.")
        with open(file_path, 'r') as file:
            csv_reader = csv.reader(file)
            OldAsinList = set(row[0] for row in csv_reader)

            # Find differences
            NewAsins = asin_list - OldAsinList
            CleanNewAsins = remove_newline_from_set(NewAsins)

            # If there are new ASINs, send them to Discord
        if CleanNewAsins:
            message = f"New ASINs for {seller_key}: {', '.join(CleanNewAsins)}"
            send_to_discord(discord_webhook_url, message)
            print(f"New ASINs for {seller_key} sent to Discord.")

            # Append new ASINs to CSV
            with open(file_path, 'a', newline='') as csvfile:
                csv_writer = csv.writer(csvfile)
                for asin in CleanNewAsins:
                    csv_writer.writerow([asin])
            print(f"New ASINs appended to '{csv_filename}'.")
        else:
            print(f"No new ASINs for {seller_key} to send to Discord or append to CSV.")
    else:
        print(f"The file '{csv_filename}' does not exist in the folder.")
        with open(file_path, 'w', newline='') as csvfile:
            csv_writer = csv.writer(csvfile)
            csv_writer.writerows([[asin] for asin in asin_list])
        print(f"CSV file '{csv_filename}' created successfully.")







